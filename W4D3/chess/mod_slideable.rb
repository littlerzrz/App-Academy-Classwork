module Slideable
    HORIZONTAL_DIRS = [[0, 1], [0, -1], [1, 0], [-1, 0]] #POS = [0, 0] + HORIZONTAL_DIRS[1] => [0, 1]
    DIAGONAL_DIRS = [[1, 1], [-1,-1], [-1,1], [1,-1]]
    
    def horizontal_dirs
        HORIZONTAL_DIRS
    end

    
    def diagonal_dirs
        DIAGONAL_DIRS 
    end

    def moves # all possible moves generated by grow unblocked
        res = []
        move_dirs.each do |dir| #dir = [0, 1]
            res += grow_unblocked_movies_in_dir(dir[0],dir[1])
        end
        res
    end
    
    def move_dirs
        raise "write your method in your subclass!!!!"
    end

    private

    def grow_unblocked_movies_in_dir(dx, dy) #one direction; returns an array of positions
        #i.e. current_position = [0, 0] there's a piece at [0, 3] destination: [0, 4] so we want res_one_dir = [[0, 1], [0, 2], [0, 3], [0, 4]]
        res_one_dir = []
        new_pos_0 = self.pos.first
        new_pos_1 = self.pos.last

        loop do
            new_pos_0 += dx
            new_pos_1 += dy 
            res_one_dir << [new_pos_0,new_pos_1]
            break if !@board.valid_pos?( [new_pos_0,new_pos_1])
        end
        res_one_dir
    end
    
end